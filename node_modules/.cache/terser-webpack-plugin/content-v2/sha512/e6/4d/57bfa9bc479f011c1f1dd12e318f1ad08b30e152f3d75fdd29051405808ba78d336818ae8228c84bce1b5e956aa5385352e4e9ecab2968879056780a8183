{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{209:function(t,e,a){\"use strict\";a.r(e);var n=a(0),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h3\",{attrs:{id:\"this对象\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#this对象\"}},[t._v(\"#\")]),t._v(\" this对象\")]),t._v(\" \"),a(\"h5\",{attrs:{id:\"this对象是基于函数的执行环境绑定的。\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#this对象是基于函数的执行环境绑定的。\"}},[t._v(\"#\")]),t._v(\" this对象是基于函数的执行环境绑定的。\")]),t._v(\" \"),a(\"p\",[t._v(\"比较常见的例子：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v('var name=\"Robert Downey Jr.\";\\nvar film={\\n    name:\"Tony Stark\",\\n    getName:function(){\\n        return this.name\\n    }\\n};\\nvar myName=film.getName;\\n//A\\nfilm.getName() //打印出的this是\"Tony Stark\"\\n//B\\nmyName() //打印出的this是\"Robert Downey Jr.\"\\n')])])]),a(\"p\",[t._v(\"A和B的调用为什么会输出两种不同的值呢？\")]),t._v(\" \"),a(\"p\",[t._v(\"从内存的\"),a(\"strong\",[t._v(\"数据结构\")]),t._v(\"来看：\")]),t._v(\" \"),a(\"p\",[t._v(\"变量film保存着对象的地址，getName的value属性同时又保存着函数的地址，如下图\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://i.loli.net/2019/05/08/5cd296bdbd7ca.png\",alt:\"image\"}}),t._v(\" \"),a(\"code\",[t._v(\"var myName=film.getName\")]),t._v(\"只是把函数的地址指向myName，\\n而这个函数，通俗点讲就好比一个演员，在film中叫做Tony，但在现实生活中就是Robert了。this就是film和现实世界这两个环境的指代。\")]),t._v(\" \"),a(\"p\",[t._v(\"如图所示\"),a(\"img\",{attrs:{src:\"https://i.loli.net/2019/05/08/5cd29a7954afe.png\",alt:\"image\"}})]),t._v(\" \"),a(\"p\",[t._v(\"另外，我们知道函数有一个\"),a(\"strong\",[t._v(\"call\")]),t._v(\"方法，\"),a(\"code\",[t._v(\"film.getName()\")]),t._v(\" 实际是\"),a(\"code\",[t._v(\"film.getName.call(film)\")]),t._v(\"的一种语法糖写法。\")]),t._v(\" \"),a(\"p\",[t._v(\"call方法语法：\\nfun.call(thisArg, arg1, arg2, ...)\")]),t._v(\" \"),a(\"p\",[t._v(\"thisArg就是this的指向，\\n如果thisArg为undefined或者null，则自动指向全局对象window\")]),t._v(\" \"),a(\"p\",[t._v(\"如上面的\"),a(\"code\",[t._v(\"myName()\")]),t._v(\" 可转化为\"),a(\"code\",[t._v(\"myName.call(undefined)\")]),t._v(\"，this就是undefined,自动指向全局对象。\")]),t._v(\" \"),a(\"p\",[t._v(\"最后补充两点，\")]),t._v(\" \"),a(\"p\",[t._v(\"1、\"),a(\"strong\",[t._v(\"匿名函数的执行环境具有全局性\")]),t._v(\"，其this对象通常指向window。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v('var name=\"Robert Downey Jr.\"\\nvar film={\\n   name:\"Tony Stark\",\\n   getName:function(){\\n   \\treturn function(){\\n   \\t\\treturn this.name\\n   \\t}  \\n   }\\n}\\nfilm.getName()() //输出 \"Robert Downey Jr.\"\\n')])])]),a(\"p\",[t._v(\"2、箭头函数不会创建自己的this,它只会从自己的作用域链的上一层继承this\")])])}),[],!1,null,null,null);e.default=s.exports}}]);","extractedComments":[]}